<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <Type Name="Array&lt;*&gt;">
    <DisplayString>{{ count={count} }}</DisplayString>
    <Expand>
      <Item Name="[count]" ExcludeView="simple">count</Item>
      <Item Name="[capacity]" ExcludeView="simple">capacity</Item>
      <ArrayItems>
        <Size>count</Size>
        <ValuePointer>storage</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="SmallArray&lt;*,*&gt;">
    <DisplayString>{{ count={count} }}</DisplayString>
    <Expand>
      <Item Name="[count]" ExcludeView="simple">count</Item>
      <Item Name="[capacity]" ExcludeView="simple">capacity</Item>
      <ArrayItems>
        <Size>count</Size>
        <ValuePointer>storage ? storage : small</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="String">
    <DisplayString>{characters,[length]sb}</DisplayString>
  </Type>

  <Type Name="String_Hasher">
    <DisplayString>{characters.storage,[characters.count]sb}</DisplayString>
  </Type>

  <Type Name="Type">
    <DisplayString Condition="flavor == TypeFlavor::INTEGER &amp;&amp; size == 0">IntLiteral</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::Float &amp;&amp; size == 0">FloatLiteral</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::INTEGER &amp;&amp; (flags &amp; 2)">s{size*8}</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::INTEGER &amp;&amp; !(flags &amp; 2)">u{size*8}</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::FLOAT">f{size*8}</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::POINTER">*{*((TypePointer*)this)->pointerTo}</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::VOID">void</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::FUNCTION">*Function*</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::AUTO_CAST">*AutoCast*</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::TYPE">type</DisplayString>
    <DisplayString Condition="flavor == TypeFlavor::BOOL">bool</DisplayString>
  </Type>

  <Type Name="Argument">
    <DisplayString>{number}</DisplayString>
  </Type>
  

  <Type Name="Ir">
    <DisplayString Condition="op == IrOp::STRING">STRING {dest} &lt;- "{string->string}"</DisplayString>
    <DisplayString Condition="op == IrOp::CALL">CALL_{opSize*8} {dest} &lt;- {a} {&amp;arguments->args[0],[arguments->argCount]na}</DisplayString>
    <DisplayString Condition="op == IrOp::FUNCTION &amp;&amp; function->declaration">FUNCTION {dest} &lt;- {function->declaration->name}</DisplayString>
    <DisplayString Condition="op == IrOp::SET">SET_{opSize*8} {dest} &lt;- {a}</DisplayString>
    <DisplayString Condition="op == IrOp::IF_Z_GOTO || op == IrOp::IF_NZ_GOTO">{op,en}_{opSize*8} {a}, {b}</DisplayString>
    <DisplayString Condition="op == IrOp::GOTO">GOTO {b}</DisplayString>
    <DisplayString>{op,en}_{opSize*8} {dest} &lt;- {a}, {b}</DisplayString>
  </Type>
</AutoVisualizer>